# https://docs.microsoft.com/azure/devops/pipelines/languages/dotnet-core
# https://docs.microsoft.com/en-us/azure/devops/pipelines/process/expressions?view=azure-devops#variables
# https://docs.microsoft.com/en-us/azure/devops/pipelines/process/variables?view=azure-devops&tabs=yaml%2Cbatch#share-variables-across-pipelines
# https://docs.microsoft.com/en-us/azure/devops/pipelines/build/variables?view=azure-devops&tabs=yaml

trigger:
  - develop
  - feature/*
  - master
  - main

pr:
  - develop
  - feature/*

pool:
  vmImage: 'windows-latest'

stages:
  - stage: "Build"
    displayName: "Artifact build"
    jobs:
      - job: "Build"
        displayName: "Artifact build"
        variables:
          - name: DOTNET_CLI_TELEMETRY_OPTOUT
            value: 1
          - name: DOTNET_SKIP_FIRST_TIME_EXPERIENCE
            value: 1
          - name: COENM_FRIENDLY_BANCHNAME
            value: $[replace(variables['Build.SourceBranch'], 'refs/heads/', '')]
          - name: COENM_IS_FEATURE_BRANCH
            value: $[contains(variables['Build.SourceBranch'], 'refs/heads/feature/')]
          - name: COENM_IS_DEVELOP_BRANCH
            value: $[contains(variables['Build.SourceBranch'], 'refs/heads/develop')]
        steps:
        - task: UseDotNet@2
          displayName: "Use dotnet sdk 5.0.x"
          inputs:
            version: 5.0.x
            includePreviewVersions: false

        - script: dotnet --info
          displayName: Show dotnet SDK info
      
        - task: PowerShell@2
          displayName: "Use JDK11 by default"
          inputs:
            targetType: 'inline'
            script: |
              $jdkPath = $env:JAVA_HOME_11_X64
              Write-Host "##vso[task.setvariable variable=JAVA_HOME]$jdkPath"

        - task: NuGetToolInstaller@1
          displayName: Install Nuget 5x
          inputs:
            versionSpec: '5.*'
            checkLatest: true

        - task: DotNetCoreCLI@2
          displayName: "Install tool: dotnet-sonarscanner"
          inputs:
            command: "custom"
            custom: "tool"
            arguments: "update --global dotnet-sonarscanner"

        - task: DotNetCoreCLI@2
          displayName: "Install tool: dotnet-reportgenerator-globaltool"
          inputs:
            command: "custom"
            custom: "tool"
            arguments: "update --global dotnet-reportgenerator-globaltool"

        - pwsh: |
            dotnet tool install --tool-path . nbgv
            ./nbgv cloud -a
          displayName: Set build number
          name: Nbgv

        - task: PowerShell@2
          displayName: Publish Nerdbank variables
          name: VariableExport
          inputs:
            targetType: 'inline'
            script: |
              $var = (gci env:NBGV*).GetEnumerator() | Sort-Object Name
              $out = ""
              Foreach ($v in $var) {$out = $out + "##vso[task.setvariable variable={0};isOutput=true]{1}`n" -f $v.Name, $v.Value}
              write-output $out
            errorActionPreference: 'silentlyContinue'
            ignoreLASTEXITCODE: true

        - task: DotNetCoreCLI@2
          displayName: Restore
          inputs:
            command: 'restore'
            projects: '**/*.csproj'

        - task: DotNetCoreCLI@2
          displayName: "Dotnet Build"
          inputs:
            command: 'build'
            projects: '**/*.csproj'
        
        - task: DotNetCoreCLI@2
          displayName: "Dotnet Test"
          inputs:
            command: test
            projects: '**/*[Tt]ests/*.csproj'